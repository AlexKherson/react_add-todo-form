{"version":3,"sources":["api/users.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","api/todos.ts","helpers/getTodosInfo.ts","helpers/removeByPattern.ts","index.tsx"],"names":["id","name","username","email","UserInfo","user","className","href","TodoInfo","todo","classNames","completed","title","TodoList","todos","map","todosInfo","userId","todoUser","usersFromServer","find","App","useState","setTitle","selectedUser","setSelectedUser","setTodos","errorTitle","setErrorTitle","errorSelectedUser","setErrorSelectedUser","submit","event","preventDefault","result","isValid","userInfo","Error","prev","maxId","Math","max","Container","maxWidth","sx","display","flexDirection","alignItems","Box","width","mb","onSubmit","FormControl","fullWidth","error","size","TextField","label","onChange","newTitle","patternedTitle","text","pattern","replaceAll","changeTitle","target","value","type","InputLabel","Select","labelId","MenuItem","justifyContent","Button","color","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2b71f794.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import { FC } from 'react';\nimport { User } from '../../types/user';\n\ntype UserProps = {\n  user: User,\n};\n\nexport const UserInfo: FC<UserProps> = ({ user }) => {\n  return (\n    <a className=\"UserInfo\" href={`mailto:${user.email}`}>\n      {user.name}\n    </a>\n  );\n};\n","import { FC } from 'react';\nimport classNames from 'classnames';\nimport { TodoFullInfo } from '../../types/todoFullInfo';\nimport { UserInfo } from '../UserInfo';\n\ntype TodoProps = {\n  todo: TodoFullInfo,\n};\n\nexport const TodoInfo: FC<TodoProps> = ({ todo }) => {\n  return (\n    <article\n      data-id={todo.id}\n      className={classNames(\n        'TodoInfo',\n        {\n          'TodoInfo--completed': todo.completed,\n        },\n      )}\n    >\n      <h2 className=\"TodoInfo__title\">\n        {todo.title}\n      </h2>\n\n      {todo.user\n        ? (<UserInfo user={todo.user} />)\n        : ('unknown user')}\n\n    </article>\n  );\n};\n","import { FC } from 'react';\nimport { TodoFullInfo } from '../../types/todoFullInfo';\nimport { TodoInfo } from '../TodoInfo';\n\ntype PropsTodos = {\n  todos: TodoFullInfo[]\n};\n\nexport const TodoList: FC<PropsTodos> = ({ todos }) => {\n  return (\n    <section className=\"TodoList\">\n      {todos.map(todo => (\n        <TodoInfo key={todo.id} todo={todo} />\n      ))}\n    </section>\n  );\n};\n","import { FormEvent, useState } from 'react';\nimport './App.scss';\nimport {\n  FormControl, InputLabel, MenuItem, Select,\n  Button,\n  TextField,\n  Container,\n  Box,\n  // FormHelperText,\n} from '@mui/material';\nimport usersFromServer from './api/users';\nimport { TodoList } from './components/TodoList';\nimport { TodoFullInfo } from './types/todoFullInfo';\nimport { getTodosInfo } from './helpers/getTodosInfo';\nimport { removeByPattern } from './helpers/removeByPattern';\n\nconst todosInfo = getTodosInfo();\n\nexport const App = () => {\n  const [title, setTitle] = useState('');\n  const [selectedUser, setSelectedUser] = useState('');\n  const [todos, setTodos] = useState(todosInfo);\n  const [errorTitle, setErrorTitle] = useState('');\n  const [errorSelectedUser, setErrorSelectedUser] = useState('');\n\n  const changeUser = (name: string) => {\n    if (name !== '') {\n      setErrorSelectedUser('');\n    }\n\n    setSelectedUser(name);\n  };\n\n  const changeTitle = (newTitle: string) => {\n    if (newTitle !== '') {\n      setErrorTitle('');\n    }\n\n    const pattern = /[@^#$/%^&*()_+-\\\\{}[\\]]/g;\n    const patternedTitle = removeByPattern(newTitle, pattern);\n\n    setTitle(patternedTitle);\n  };\n\n  const clearForm = () => {\n    setTitle('');\n    setSelectedUser('');\n  };\n\n  const isValid = (): boolean => {\n    let result = true;\n\n    if (title === '') {\n      setErrorTitle('Please enter a title');\n\n      result = false;\n    }\n\n    if (selectedUser === '') {\n      setErrorSelectedUser('Please choose a user');\n\n      result = false;\n    }\n\n    return result;\n  };\n\n  const submit = (event:FormEvent) => {\n    event.preventDefault();\n\n    if (!isValid()) {\n      return;\n    }\n\n    const userInfo = usersFromServer\n      .find(user => user.name === selectedUser);\n\n    if (!userInfo) {\n      throw new Error('User not found');\n    }\n\n    setTodos((prev) => {\n      const maxId = Math.max(...prev.map(todo => todo.id));\n\n      return [...prev, {\n        id: maxId + 1,\n        title,\n        userId: userInfo.id,\n        completed: false,\n        user: userInfo,\n      } as TodoFullInfo];\n    });\n\n    clearForm();\n  };\n\n  return (\n    <>\n      <Container\n        maxWidth=\"sm\"\n        sx={{\n          display: 'flex',\n          flexDirection: 'column',\n          alignItems: 'center',\n        }}\n      >\n\n        <h1>Add todo form</h1>\n\n        <Box\n          sx={{\n            width: '50%',\n            mb: 5,\n          }}\n        >\n          <form\n            onSubmit={(event) => submit(event)}\n          >\n\n            <FormControl\n              fullWidth\n              error={errorTitle !== ''}\n              size=\"small\"\n            >\n              <TextField\n                data-cy=\"titleInput\"\n                label=\"Enter title\"\n                onChange={event => changeTitle(event.target.value)}\n                type=\"text\"\n                sx={{ mb: 3 }}\n                fullWidth\n                value={title}\n                error={errorTitle !== ''}\n              />\n            </FormControl>\n\n            <FormControl fullWidth>\n              <InputLabel id=\"user-select-label\">\n                Choose user\n              </InputLabel>\n              <Select\n                data-cy=\"userSelect\"\n                labelId=\"user-select-label\"\n                id=\"user-simple-select\"\n                sx={{ mb: 3 }}\n                value={selectedUser}\n                label=\"Choose user\"\n                onChange={(event) => changeUser(event.target.value)}\n                error={errorSelectedUser !== ''}\n              >\n                {usersFromServer.map(user => (\n                  <MenuItem\n                    key={user.id}\n                    value={user.id}\n                  >\n                    {user.name}\n                  </MenuItem>\n                ))}\n              </Select>\n            </FormControl>\n\n            <Box\n              sx={{\n                display: 'flex',\n                justifyContent: 'flex-end',\n              }}\n            >\n              <Button\n                data-cy=\"submitButton\"\n                type=\"submit\"\n                color=\"success\"\n              >\n                Add\n              </Button>\n            </Box>\n\n          </form>\n        </Box>\n        <TodoList todos={todos} />\n      </Container>\n    </>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import { TodoFullInfo } from '../types/todoFullInfo';\nimport { User } from '../types/user';\nimport usersFromServer from '../api/users';\nimport todosFromServer from '../api/todos';\n\nexport function getTodosInfo(): TodoFullInfo[] {\n  return todosFromServer\n    .map(todo => {\n      const todoUser: User | null = usersFromServer\n        .find(user => user.id === todo.userId) || null;\n\n      return {\n        ...todo,\n        user: todoUser,\n      };\n    });\n}\n","export function removeByPattern(\n  text:string,\n  pattern: RegExp,\n): string {\n  return text.replaceAll(pattern, '');\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n// import { App1 } from './App1';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}